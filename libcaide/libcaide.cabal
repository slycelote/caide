cabal-version:  3.14
name:           libcaide
version:        2.11
build-type:     Custom
license:        GPL-3.0-or-later
license-file:   LICENSE
author:         slycelote
maintainer:     slycelot@yandex.ru
synopsis:       Automate certain common tasks that you do during programming competitions.
category:       Application
homepage:       https://github.com/slycelote/caide
bug-reports:    https://github.com/slycelote/caide/issues
description:
    Automates certain common tasks that you do during programming competitions:
    parsing, running and debugging problem tests, inlining library code.
tested-with:    GHC == 9.12.2

source-repository head
  type:         git
  location:     https://github.com/slycelote/caide

Flag openssl
  description: Use openssl library installed in the system instead of Haskell tls package
  default: False

Flag cppinliner
  description: Include support for inlining C++ code via libclang
  default: True

Flag debug
  description: Debug build
  default: False


custom-setup
  setup-depends: base >= 4.7,
                 bytestring,
                 Cabal >= 3.14,
                 directory >= 1.2.3,
                 filepath,
                 zip-archive

common exe-flags
  ghc-options:     -Wall -static -rtsopts=all

  if flag(cppinliner) {
    ghc-options:   -pgml g++
  }

  if os(windows) {
    -- -threaded runtime on Windows causes native calls in Network.Socket to be uninterruptible:
    -- https://stackoverflow.com/questions/10608602
    ghc-options:   -optl-static
  } else {
    -- Don't use -static linker option in Linux, since we don't want to statically link glibc
    ghc-options:   -optl-pthread -threaded -with-rtsopts=-N
  }
  if flag(debug) {
    -- run as cabal configure -fdebug --ghc-option=-debug -O0
    ghc-options:   -fprof-auto
  }

executable caide
  import: exe-flags
  build-depends: base, libcaide
  default-language: Haskell2010
  hs-source-dirs: app
  main-is: Main.hs

test-suite caide-tests
  import: exe-flags
  type: exitcode-stdio-1.0
  build-depends: base, libcaide, aeson, HUnit, text
  default-language: Haskell2010
  hs-source-dirs: test
  main-is: Main.hs
  other-modules: ProblemParsers
  other-extensions: OverloadedLists, OverloadedStrings, RecordWildCards

library
  build-depends:
                   base >= 4.8,
                   aeson >= 2,
                   array,
                   async >= 2.0.1,
                   attoparsec,
                   attoparsec-aeson,
                   bytestring,
                   ConfigFile,
                   containers >= 0.5.0.0,
                   cryptonite,
                   directory,
                   file-embed,
                   filelock,
                   filepath,
                   http-client >= 0.5,
                   http-types >= 0.9,
                   httpd-shed,
                   microstache,
                   mtl >= 2.2.1,
                   network >= 2.6,
                   network-uri >= 2.6,
                   optparse-applicative >= 0.15,
                   parsec,
                   process,
                   scientific,
                   stringsearch,
                   system-fileio >= 0.3.16,
                   system-filepath,
                   tagsoup >= 0.13,
                   text >= 1.1.0,
                   time >= 1.5.0.1,
                   unordered-containers,
                   vector,
                   xml,
                   zip-archive
  if flag(openssl) {
    build-depends: http-client-openssl
  } else {
    build-depends: http-client-tls, connection
  }

  hs-source-dirs:  src
  other-extensions: CPP, DeriveGeneric, ForeignFunctionInterface, GeneralizedNewtypeDeriving,
                    OverloadedStrings, RecordWildCards, ScopedTypeVariables

  ghc-options:     -Wall -static -rtsopts=all
  if flag(debug) {
    ghc-options:   -fprof-auto
  }
  if flag(cppinliner) {
    cpp-options:     -DCLANG_INLINER
    include-dirs:    cbits
    c-sources:       cbits/cwrapper.c
    if os(windows) {
      extra-libraries: imagehlp ole32 uuid version
    }
  }
  default-language: Haskell2010

  autogen-modules: Paths_CaideExt
  exposed-modules: Caide.CaideMain
  -- other-modules:
        Caide.Builders.Custom
        Caide.Builders.None
        Caide.CheckUpdates
        Caide.CodeforcesCookie
        Caide.CPP.CBinding
        Caide.CPP.CPP
        Caide.CPP.CPPSimple
        Caide.CSharp.CSharpSimple
        Caide.Commands
        Caide.Commands.Archive
        Caide.Commands.BuildScaffold
        Caide.Commands.CHelperHttpServer
        Caide.Commands.Checkout
        Caide.Commands.ConvertTestCase
        Caide.Commands.GetOpt
        Caide.Commands.Init
        Caide.Commands.Make
        Caide.Commands.ParseContest
        Caide.Commands.ParseProblem
        Caide.Commands.RunTests
        Caide.Configuration
        Caide.CustomBuilder
        Caide.Features.Codelite
        Caide.GenericLanguage
        Caide.GlobalState
        Caide.GlobalTemplate
        Caide.HttpClient
        Caide.Logger
        Caide.MustacheUtil
        Caide.Parsers.CodeChef
        Caide.Parsers.CodeChefContest
        Caide.Parsers.Codeforces
        Caide.Parsers.CodeforcesContest
        Caide.Parsers.Common
        Caide.Parsers.GCJ
        Caide.Parsers.HackerRank
        Caide.Parsers.LeetCode
        Caide.Parsers.LeetCodeContest
        Caide.Parsers.POJ
        Caide.Parsers.Timus
        Caide.Parsers.Yandex
        Caide.Paths
        Caide.Problem
        Caide.Registry
        Caide.Settings
        Caide.Templates
        Caide.TestCases
        Caide.TestCases.TopcoderDeserializer
        Caide.TestCases.Types
        Caide.Types
        Caide.Types.Option
        Caide.Util
        Caide.Xml
        Control.Exception.Extended
        Control.Monad.Extended
        Data.Either.Util
        Data.List.Util
        Data.Text.Encoding.Util
        Data.Text.IO.Util
        Filesystem.Util
        Paths_CaideExt
        Paths_libcaide
        System.IO.Util
        Text.HTML.TagSoup.Utils

